class Rummy{constructor(t){this.renderer=t,this.state=0}start_game(){this.generate_cards(),this.update_html(),this.increment_state(),this.render(),this.time_started=Date.now(),this.time_played=0,Statistics.stats.totalGames++,Saving.clear_game()}load_game(t){this.player=new Player(t.player.cards),this.opponent=new Opponent(t.opponent.cards),this.pickup=t.pickup,this.pile=t.pile,this.state=t.state,this.time_started=t.time_started,this.time_played=t.time_played,this.renderer.highlights=t.renderer.highlights,this.renderer.theme=t.renderer.theme,3==this.state&&(7!=this.opponent.cards.length?this.opponent.discard():this.opponent.generate_move()),this.render(),this.update_html()}update_html(){g("start-game").style.display="none",g("load-game").style.display="none",g("cards").style.display="block",g("help-text").style.display="inline",g("save-game").style.display="inline-block",g("new-game").style.display="inline-block",Theme.set(this.renderer.theme)}generate_cards(){let t=GENERATE_DECK().sort(()=>Math.random()-.5);this.player=new Player(t.splice(0,7)),this.opponent=new Opponent(t.splice(0,7)),this.pickup=t.splice(0,1),this.pile=t}increment_state(){this.state=3==this.state?1:this.state+1,this.player.valid_meld()?(this.state=4,this.render(),Statistics.stats.playerWins++,Statistics.stats.fastestWin=Math.min(Statistics.stats.fastestWin,this.time_played)):this.opponent.valid_meld()&&(this.state=5,this.opponent.sort(),this.render(),Statistics.stats.opponentWins++),0==this.pile.length&&(this.pile=this.pickup.reverse(),this.pickup=this.pile.splice(0,1),this.render()),Saving.save()}render(){this.renderer.draw("player",this.player.cards),this.renderer.draw("pile",this.pile,this.pickup),this.renderer.draw("opponent",this.opponent.cards),this.renderer.draw("text",this.state)}callback(t,e,s){if("pile"==e){if(1!=this.state)return;this.player.add_card(t),1==s&&this.pickup.splice(0,1),2==s&&this.pile.splice(0,1),this.increment_state(),this.render(),Statistics.stats.totalCards++}else if("player"==e){if(2!=this.state)return;this.pickup.unshift(t),this.player.remove_card(t),this.increment_state(),this.render(),this.opponent.generate_move(),Statistics.stats.totalCards++}}}class Card{constructor(t){this.id=t,this.value=VALUES[t%13],this.suit=SUITS[Math.floor(t/13)]}repr(){return this.value+this.suit}static repr(t){return"<span style='color: "+(Math.floor(t/13)<2?"red":"var(--text-color)")+"'>"+new Card(t).value+new Card(t).suit+"</span>"}}class Player{constructor(t){this.cards=t,this.name="player"}add_card(t){this.cards.push(t)}remove_card(t){this.cards.splice(this.cards.indexOf(t),1)}sort_by_value(){let t=this.cards.length,e=!0;for(;t>=0&&e;){e=!1;for(let s=0;s<t-1;s++)if(VALUES.indexOf(this.cards[s].value)>VALUES.indexOf(this.cards[s+1].value)){let t=this.cards[s];this.cards[s]=this.cards[s+1],this.cards[s+1]=t,e=!0}t-=1}Game.renderer.draw(this.name,this.cards)}sort_by_suit(){let t=this.cards.length,e=!0;for(;t>=0&&e;){e=!1;for(let s=0;s<t-1;s++)if(SUITS.indexOf(this.cards[s].suit)>SUITS.indexOf(this.cards[s+1].suit)){let t=this.cards[s];this.cards[s]=this.cards[s+1],this.cards[s+1]=t,e=!0}t-=1}Game.renderer.draw(this.name,this.cards)}sort(){this.sort_by_suit(),this.sort_by_value()}valid_runs(){let t=this.raw_valid_runs(),e=t[0],s=this.raw_valid_sets()[0];if(null!=e&&null!=s&&5==e.length&&3==s.length&&(s.includes(e[0])||s.includes(e[4])))for(let t of e)s.includes(t)&&e.splice(e.indexOf(t),1);return t}valid_sets(){let t=this.raw_valid_sets();if(0==this.valid_runs().length)return t;for(let e of t){let t=this.valid_runs().flatten();if(this.overlap())for(let s of t)e.includes(s)&&e.splice(e.indexOf(s),1)}return t=t.filter(t=>t.length>2)}overlap(){let t=this.raw_valid_runs().flatten(),e=this.raw_valid_sets().flatten();return t.some(t=>e.includes(t))}valid_meld(){if(7!=this.cards.length)return;let t=0;return 0!==this.valid_runs().length&&this.valid_runs().forEach(e=>t+=e.length),0!==this.valid_sets().length&&this.valid_sets().forEach(e=>t+=e.length),7==t}raw_valid_runs(){let t=[...Array(7)].map((t,e)=>this.cards[e].id),e=[[],[],[],[]],s=[];for(let s of t)e[Math.floor(s/13)].push(s);e=e.filter(t=>t.length>2);for(let t of e){t.sort((t,e)=>t-e);let e=[],i=t[0];for(let a=1;a<t.length;a++){let r=t[a],l=Math.abs(r-i);1==l&&(e.push(i),e.push(r),e=[...new Set(e)]),1!=l&&(s.push(e),e=[]),i=r}s.push(e)}return s=s.filter(t=>t.length>2)}raw_valid_sets(){let t=[...Array(13)].map(()=>[]);for(let e of this.cards)t[VALUES.indexOf(e.value)].push(e.id);return t=t.filter(t=>t.length>2)}}class Opponent extends Player{constructor(t){super(t),this.name="opponent"}generate_move(){4!=Game.state&&sleep(1e3).then(()=>{Math.random()>.5?(this.add_card(Game.pickup[0]),Game.pickup.splice(0,1)):(this.add_card(Game.pile[0]),Game.pile.splice(0,1)),Game.render(),this.discard()})}partial_sets(){let t=[...Array(13)].map(()=>[]);for(let e of this.cards)t[VALUES.indexOf(e.value)].push(e.id);return t=t.filter(t=>t.length>1)}partial_runs(){let t=[...Array(7)].map((t,e)=>this.cards[e].id),e=[[],[],[],[]],s=[];for(let s of t)e[Math.floor(s/13)].push(s);for(let t of e){if(t.length<3)continue;t.sort((t,e)=>t-e);let e=[],i=t[0];for(let a=1;a<t.length;a++){let r=t[a],l=Math.abs(r-i);1==l&&(e.push(i),e.push(r),e=[...new Set(e)]),1!=l&&(s.push(e),e=[]),i=r}s.push(e)}return s=s.filter(t=>t.length>1)}discard_card(){this.sort();let t=this.partial_runs().flatten(),e=this.partial_sets().flatten();for(let s of this.cards)if(!t.includes(s.id)&&!e.includes(s.id))return s;return this.cards[Math.floor(7*Math.random())]}discard(){sleep(1e3).then(()=>{let t=this.discard_card();Game.pickup.unshift(t),this.remove_card(t),Game.increment_state(),Game.render()})}}let Theme={init(){this.root=document.querySelector(":root"),this.container=document.getElementById("theme-btn"),this.theme="Light",this.set(this.theme)},toggle(){this.theme="Dark"==this.theme?"Light":"Dark",Game.renderer.theme=this.theme,this.set(this.theme)},set(t){this.theme=t,this.container.innerText="Theme: "+this.theme,"Dark"==this.theme?(this.root.style.setProperty("--background-color","black"),this.root.style.setProperty("--text-color","white"),this.root.style.setProperty("--header-color","#aaa"),this.root.style.setProperty("--highlight-color","#f0f")):(this.root.style.setProperty("--background-color","white"),this.root.style.setProperty("--text-color","black"),this.root.style.setProperty("--header-color","#eee"),this.root.style.setProperty("--highlight-color","#ff0"))}},Tabs={init(){this.tabs=document.querySelectorAll(".tab"),this.set(0)},set(t){this.hide(),this.tabs[t].style.display="block"},hide(){this.tabs.forEach(t=>t.style.display="none")}},Notifications={init(){this.container=g("notifications")},notify(t){let e=document.createElement("div");e.classList.add("notification"),e.innerText=t,this.container.appendChild(e),setTimeout(function(){Notifications.callback(e)},2e3)},callback(t){this.container.removeChild(t)}},Statistics={init(){this.elements=[...Array(7)].map((t,e)=>g("s"+(e+1))),this.lastUpdate=Date.now(),this.loadStats(),this.update()},stats:{timeTotal:0,timeInGame:0,fastestWin:35964e5,totalGames:0,totalCards:0,playerWins:0,opponentWins:0},saveStats(){localStorage.setItem("stats",JSON.stringify(this.stats))},loadStats(){null==localStorage.getItem("stats")&&this.saveStats(),this.stats=JSON.parse(localStorage.getItem("stats")),null==localStorage.getItem("rummy-game")&&(this.stats.timeInGame=0)},reset(){confirm("Are you sure?")&&(this.stats={timeTotal:0,timeInGame:0,fastestWin:35964e5,totalGames:0,totalCards:0,playerWins:0,opponentWins:0},this.saveStats())},timeFormat(t){let e=(t/1e3).toFixed(0),s=0,i=0;return e>=60&&(s=Math.floor(e/60),e=(e%60).toFixed(0)),s>=60&&(i=Math.floor(s/60),s%=60),i<10&&(i="0"+i),s<10&&(s="0"+s),e<10&&(e="0"+e),i+":"+s+":"+e},update(){let t=Date.now(),e=t-this.lastUpdate;this.lastUpdate=t,0!=Game.state&&Game.state<4&&(this.stats.timeTotal+=e,Game.time_played+=e,this.stats.timeInGame=Game.time_played),this.elements[0].innerText=this.timeFormat(this.stats.timeTotal),this.elements[1].innerText=0==Game.state?this.timeFormat(0):this.timeFormat(this.stats.timeInGame),this.elements[2].innerText=this.stats.totalGames,this.elements[3].innerText=this.stats.totalCards,this.elements[4].innerText=this.stats.playerWins,this.elements[5].innerText=this.stats.opponentWins,this.elements[6].innerText=this.timeFormat(this.stats.fastestWin)}},Saving={save(t){null==t&&(t=!1);let e=JSON.stringify(Game);localStorage.setItem("rummy-game",e),t&&Notifications.notify("Game saved!")},load(){data=JSON.parse(localStorage.getItem("rummy-game")),Game.load_game(data)},start_new_game(t){null==t&&(t=!1),0!=Game.state&&((Game=new Rummy(Render)).start_game(),localStorage.removeItem("rummy-game"),Tabs.set(0),t&&Notifications.notify("New game started!"))},get_load_time:()=>(data=JSON.parse(localStorage.getItem("rummy-game")),data.time_started),clear_game(){localStorage.removeItem("rummy-game")}};class Renderer{constructor(t,e,s,i){this.player=t,this.pile=e,this.opponent=s,this.text=i,this.highlights=!1,this.theme="Light"}draw(t,e,s){if(0!=Game.state)if("player"==t){this.player.innerHTML="";for(let t of e){let e=document.createElement("div");e.classList.add("card"),e.classList.add("player-card"),e.classList.add(t.suit),e.onclick=(()=>Game.callback(t,"player")),e.innerHTML=t.suit+"<br>"+t.value,this.player.appendChild(e)}}else if("pile"==t){if(this.pile.innerHTML="",null!=s[0]){let t=document.createElement("div");t.classList.add("card"),t.classList.add("player-card"),t.classList.add("pickup-card"),t.classList.add(s[0].suit),t.onclick=(()=>Game.callback(s[0],"pile",1)),t.innerHTML=s[0].suit+"<br>"+s[0].value,this.pile.appendChild(t)}let t=document.createElement("div");t.classList.add("pile-card"),t.classList.add("player-card"),t.onclick=(()=>Game.callback(e[0],"pile",2)),t.innerHTML="- <br> -",this.pile.appendChild(t)}else if("opponent"==t){this.opponent.innerHTML="";for(let t of e){let e=document.createElement("div");e.classList.add("card"),5!=Game.state&&e.classList.add("opponent-card"),5==Game.state&&(e.innerHTML=t.suit+"<br>"+t.value),this.opponent.appendChild(e)}}else"text"==t&&(this.text.innerHTML=STATES[e-1],this.reset_highlights(),this.highlights&&Game.state<4&&TITLES[e-1].classList.add("highlighted"),g("valid-runs").innerHTML="Valid runs: "+this.valid_format(Game.player.valid_runs()),g("valid-sets").innerHTML="Valid sets: "+this.valid_format(Game.player.valid_sets()),g("highlights").innerText="Card highlighting: "+(this.highlights?"On":"Off"),Game.player.overlap()&&!Game.player.valid_meld()?g("overlapping-runs").innerHTML="Some of your sets and runs are overlapping, and therefore not being counted towards for a set.":g("overlapping-runs").innerText="")}valid_format(t){let e=[];return t.flatten().forEach(t=>e.push(Card.repr(t))),e}reset_highlights(){TITLES.forEach(t=>t.classList.remove("highlighted"))}toggle_highlighting(){this.highlights=!this.highlights,g("highlights").innerText="Card highlighting: "+(this.highlights?"On":"Off"),this.reset_highlights(),this.draw("text",Game.state)}draw_test(t){g("test").innerHTML="";for(let e of t){let t=document.createElement("div");t.classList.add("card"),t.classList.add(e.suit),t.innerHTML=e.suit+"<br>"+e.value,g("test").appendChild(t)}}}window.onload=function(){Theme.init(),Tabs.init(),Notifications.init(),Statistics.init(),window.setInterval(function(){Statistics.update(),Statistics.saveStats()},500),null==localStorage.getItem("rummy-game")?(g("load-game").style.display="none",g("start-game").innerText="Start game"):g("load-game").innerText="Load game - started "+new Date(Saving.get_load_time()).toString().substr(4,20)};const g=t=>document.getElementById(t),VALUES=["A","2","3","4","5","6","7","8","9","10","J","Q","K"],SUITS=["♥","♦","♠","♣"],STATES=["Choose a card to pick up..","Choose a card to discard..","Opponent is making a move..",'Congratulations, you have won! <br> <button onclick="Saving.start_new_game(true)">Start new game</button>','You lost! Try again? <br> <button onclick="Saving.start_new_game(true)">Start new game</button>'],TITLES=[g("pile-title"),g("player-title"),g("opponent-title")],GENERATE_DECK=()=>[...Array(52)].map((t,e)=>new Card(e)),sleep=function(t){return new Promise(e=>setTimeout(e,t))},GENERATE_HAND=()=>new Player(GENERATE_DECK().sort(()=>Math.random()-.5).splice(0,7)),DRAW_TEST_HAND=t=>Game.renderer.draw_test(t.cards);Array.prototype.flatten=function(){for(var t=[],e=0;e<this.length;e++)Array.isArray(this[e])?t=t.concat(this[e].flatten()):t.push(this[e]);return t};let Render=new Renderer(g("player-cards"),g("pile-cards"),g("opponent-cards"),g("help-inner-text")),Game=new Rummy(Render);